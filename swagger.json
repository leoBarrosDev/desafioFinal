{
  "openapi": "3.0.1",
  "info": {
    "title": "Desafio Final Compass",
    "description": "A Compassolisa a partir de agora entra em um seguimento de locação de carros de luxo e semi luxo.",
    "version": "0.0.1",
    "termsOfService": "https://github.com/leoBarrosDev/desafioFinal/blob/main/LICENSE"
  },
  "externalDocs": {
    "description": "Github Repository",
    "url": "https://github.com/leoBarrosDev/desafioFinal"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1/",
      "description": "Test API"
    },
    {
      "url": "https://compassolisa-pbnodejs.herokuapp.com/api/v1/",
      "description": "Deploy Heroku"
    }
  ],
  "tags": [
    {
      "name": "Vehicles",
      "description": "Vehicle Routes"
    },
    {
      "name": "Peoples",
      "description": "People Routes"
    },
    {
      "name": "Authentication",
      "description": "People Authentication"
    },
    {
      "name": "Rentals",
      "description": "Rentals Routes"
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/car": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Return all the cars",
        "parameters": [
          {
            "name": "modelo",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "cor",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "ano",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "acessorios",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "quantidadePassageiros",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Veiculos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "modelo": {
                            "type": "string"
                          },
                          "cor": {
                            "type": "string"
                          },
                          "ano": {
                            "type": "string"
                          },
                          "acessorios": {
                            "type": "string"
                          },
                          "quantidadePassageiros": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "example": "Not found"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Registration of a new vehicle.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modelo": {
                    "type": "string"
                  },
                  "cor": {
                    "type": "string"
                  },
                  "ano": {
                    "type": "string"
                  },
                  "acessorios": {
                    "type": "string"
                  },
                  "quantidadePassageiros": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "moddelo": {
                      "type": "string"
                    },
                    "cor": {
                      "type": "string"
                    },
                    "ano": {
                      "type": "string"
                    },
                    "acessorios": {
                      "type": "string"
                    },
                    "quantidadePassageiros": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          }
        }
      }
    },
    "/car/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Update a car.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "moddelo": {
                    "type": "string"
                  },
                  "cor": {
                    "type": "string"
                  },
                  "ano": {
                    "type": "string"
                  },
                  "acessorios": {
                    "type": "string"
                  },
                  "quantidadePassageiros": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "moddelo": {
                      "type": "string"
                    },
                    "cor": {
                      "type": "string"
                    },
                    "ano": {
                      "type": "string"
                    },
                    "acessorios": {
                      "type": "string"
                    },
                    "quantidadePassageiros": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": "Resource not found by server."
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Deleting a specific vehicle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": "Resource not found by server."
              }
            }
          }
        }
      }
    },
    "/people": {
      "post": {
        "tags": [
          "Peoples"
        ],
        "summary": "Registration of a new person",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  },
                  "data_nascimento": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "senha": {
                    "type": "string"
                  },
                  "habilitado": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nome": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "data_nascimento": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "senha": {
                      "type": "string"
                    },
                    "habilitado": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Peoples"
        ],
        "summary": "Listing all people",
        "parameters": [
          {
            "name": "nome",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "people_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "cpf",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "data_nascimento",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "senha",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "habilitado",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Pessoas": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nome": {
                            "type": "string"
                          },
                          "cpf": {
                            "type": "string"
                          },
                          "data_nascimento": {
                            "type": "number"
                          },
                          "email": {
                            "type": "string"
                          },
                          "senha": {
                            "type": "string"
                          },
                          "habilitado": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          }
        }
      }
    },
    "/people/{id}": {
      "put": {
        "tags": [
          "Peoples"
        ],
        "summary": "Update a people.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  },
                  "data_nascimento": {
                    "type": "number"
                  },
                  "email": {
                    "type": "string"
                  },
                  "senha": {
                    "type": "string"
                  },
                  "habilitado": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nome": {
                      "type": "string"
                    },
                    "people_id": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "data_nascimento": {
                      "type": "number"
                    },
                    "email": {
                      "type": "string"
                    },
                    "senha": {
                      "type": "string"
                    },
                    "habilitado": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Resource not found."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Peoples"
        ],
        "summary": "Delete a people.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "successfully deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": "The server was unable to interpret the request."
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Resource not found."
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticated by email and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "senha": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nome": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "habilitado": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": "Resource not found."
              }
            }
          }
        }
      }
    },
    "/rental": {
      "post": {
        "tags": [
          "Rentals"
        ],
        "summary": "Registering a rental company consuming external API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "example": "CompassoLisa"
                  },
                  "cnpj": {
                    "type": "string",
                    "example": 7654824000124
                  },
                  "atividades": {
                    "type": "string",
                    "example": "Aluguel de Veiculos"
                  },
                  "endereco": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cep": {
                          "type": "string",
                          "example": 99010051
                        },
                        "number": {
                          "type": "string",
                          "example": 132
                        },
                        "isFilial": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "nome": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "atividades": {
                      "type": "string"
                    },
                    "endereco": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cep": {
                            "type": "string"
                          },
                          "logradouro": {
                            "type": "string"
                          },
                          "complemento": {
                            "type": "string"
                          },
                          "bairro": {
                            "type": "string"
                          },
                          "number": {
                            "type": "number"
                          },
                          "localidade": {
                            "type": "string"
                          },
                          "uf": {
                            "type": "string"
                          },
                          "isFilial": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "Rentals"
        ],
        "parameters": [
          {
            "name": "nome",
            "in": "query",
            "description": "rental company name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "description": "CNPJ of the rental company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "atividades",
            "in": "query",
            "description": "Services provided by the lessor",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cep",
            "in": "query",
            "description": "Rental cep code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logradouro",
            "in": "query",
            "description": "Location of the rental company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isFilial",
            "in": "query",
            "description": "If the rental company is a parent company or branch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "page result limit",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "total",
            "in": "query",
            "description": "total pages",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "pages skipped after offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offsets",
            "in": "query",
            "description": "first result skipped pages",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Consult all rental companies, or by parameters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "nome": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "atividades": {
                      "type": "string"
                    },
                    "endereco": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cep": {
                            "type": "string"
                          },
                          "logradouro": {
                            "type": "string"
                          },
                          "complemento": {
                            "type": "string"
                          },
                          "bairro": {
                            "type": "string"
                          },
                          "number": {
                            "type": "number"
                          },
                          "localidade": {
                            "type": "string"
                          },
                          "uf": {
                            "type": "string"
                          },
                          "isFilial": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/rental/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Rentals"
        ],
        "summary": "Query rental by ID",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "nome": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "atividades": {
                      "type": "string"
                    },
                    "endereco": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cep": {
                            "type": "string"
                          },
                          "logradouro": {
                            "type": "string"
                          },
                          "complemento": {
                            "type": "string"
                          },
                          "bairro": {
                            "type": "string"
                          },
                          "number": {
                            "type": "number"
                          },
                          "localidade": {
                            "type": "string"
                          },
                          "uf": {
                            "type": "string"
                          },
                          "isFilial": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Rentals"
        ],
        "summary": "Change the properties of a rental company found by Id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "example": "CompassoLisa"
                  },
                  "cnpj": {
                    "type": "string",
                    "example": 7654824000124
                  },
                  "atividades": {
                    "type": "string",
                    "example": "Aluga Veiculos"
                  },
                  "endereco": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cep": {
                          "type": "string",
                          "example": 99010051
                        },
                        "number": {
                          "type": "string",
                          "example": 132
                        },
                        "isFilial": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "nome": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    },
                    "atividades": {
                      "type": "string"
                    },
                    "endereco": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cep": {
                            "type": "string"
                          },
                          "logradouro": {
                            "type": "string"
                          },
                          "complemento": {
                            "type": "string"
                          },
                          "bairro": {
                            "type": "string"
                          },
                          "number": {
                            "type": "number"
                          },
                          "localidade": {
                            "type": "string"
                          },
                          "uf": {
                            "type": "string"
                          },
                          "isFilial": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Rentals"
        ],
        "summary": "Delete a rental store found by Id",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}